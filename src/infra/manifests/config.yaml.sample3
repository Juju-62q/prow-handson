prowjob_namespace: default
pod_namespace: test-pods
plank:
  allow_cancellations: true
  job_url_prefix: 'http://< domain >/view/gcs'
  job_url_template: 'http://< domain >/view/gcs/prow-handson-5963/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](http://< domain >/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 4h
    grace_period: 15s
    utility_images:
      clonerefs: gcr.io/k8s-prow/clonerefs:v20190221-d14461a
      initupload: gcr.io/k8s-prow/initupload:v20190221-d14461a
      entrypoint: gcr.io/k8s-prow/entrypoint:v20190221-d14461a
      sidecar: gcr.io/k8s-prow/sidecar:v20190221-d14461a
    gcs_configuration:
      bucket: < bucket >
      path_strategy: legacy
      default_org: < org >
      default_repo: < repo >
    gcs_credentials_secret: prow-sa-key

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    viewers:
      "started.json|finished.json":
      - "metadata-viewer"
      "build-log.txt":
      - "build-log-viewer"
      "artifacts/junit.*\\.xml":
      - "junit-viewer"
  tide_update_period: 1s

sinker:
  resync_period: 1m
  max_prowjob_age: 24h
  max_pod_age: 30m

tide:
  sync_period: 1m
  queries:
  - repos:
    - < org >/< repo >
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
  merge_method:
    < org >/< repo >: squash
  target_url: http://< domain >/tide

periodics:
- interval: 60m
  name: echo-test
  decorate: true
  spec:
    containers:
    - image: alpine
      command: ["/bin/date"]

presubmits:
  < org >/< repo >:
  - name: test
    trigger: "(?m)^/test"
    rerun_command: "/test"
    context: test
    always_run: true
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: golang:1.12.5-stretch
        command: ["make", "test"]

  - name: build
    trigger: "(?m)^/build"
    rerun_command: "/build"
    context: build
    always_run: true
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: golang:1.12.5-stretch
        command: ["make", "build"]

postsubmits:
  < org >/< repo >:
  - name: postsubmit
    branches:
    - master
    decorate: true
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
